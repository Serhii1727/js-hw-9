{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,WAG7BE,EAAa,KACbC,EAAU,EAERC,EAAwB,WAQ5B,MANY,CACVC,MAAOR,EAAKC,KAAKQ,SAASD,MAAME,MAChCC,KAAMX,EAAKC,KAAKQ,SAASE,KAAKD,MAC9BE,OAAQZ,EAAKC,KAAKQ,SAASG,OAAOF,M,EAmCtCV,EAAKC,KAAKY,iBAAiB,QAASN,GACpCP,EAAKC,KAAKY,iBAAiB,UA9BV,SAACC,GAChBA,EAAMC,iBACN,IAAgCC,EAAAT,IAAxBU,EAAwBD,EAAxBR,MAAOG,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OAIrBP,EAAaa,aAAY,WACvBZ,GAAW,EACX,IAwBmBa,EAAUX,EAEzBY,EAEAC,GAJeF,EArBLP,EAqBeJ,EArBPS,EAuBlBG,EAAgBE,KAAKC,SAAW,GAEhCF,EAAU,IAAIG,SAAQ,SAACC,EAASC,GAChCN,EACFK,EAAQ,CACNN,WACAX,UAGFkB,EAAO,CACPP,WAAUX,S,IAIdmB,QAAQC,IAAIP,GACLA,GArCJQ,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUX,EAAKsB,EAALtB,MACnBuB,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAUX,EAAKsB,EAALtB,MAClBuB,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAff,EAAS,QAAYe,OAAN1B,EAAM,M,IAIhEF,IAAY+B,OAAOzB,IACpB0B,cAAcjC,E,GAIfM,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n}\n\nlet intervalId = null;\nlet counter = 0;\n\nconst createObjectDataInput = () => {\n\n  const obj = {\n    delay: refs.form.elements.delay.value,\n    step: refs.form.elements.step.value,\n    amount: refs.form.elements.amount.value,\n  }\n\n  return obj;\n}\n\nconst promises = (event) => {\n  event.preventDefault()\n  const { delay, step, amount } = createObjectDataInput()\n\n\n\n  intervalId = setInterval(() => {\n    counter += 1; \n    let currentPosition = 1;\n\n\n    createPromise(amount, delay)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    currentPosition += 1;\n    \n    if(counter === Number(amount)) {\n      clearInterval(intervalId)\n      return\n    }\n    \n  }, step);\n\n}\n\nrefs.form.addEventListener('input', createObjectDataInput)\nrefs.form.addEventListener('submit', promises)\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n  \n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({\n        position,\n        delay\n    })\n  } else {\n      reject({\n      position, delay\n    })\n  }\n  })\n  console.log(promise)\n  return promise;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","button","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$counter","$ce04d3a99e08e73b$var$createObjectDataInput","delay","elements","value","step","amount","addEventListener","event","preventDefault","ref","delay1","setInterval","position","shouldResolve","promise","Math","random","Promise","resolve","reject","console","log","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","clearInterval"],"version":3,"file":"03-promises.140b0b1b.js.map"}