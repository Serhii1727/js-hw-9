{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,WAG3BE,EAAwB,KAEP,CACnBC,MAAON,EAAKC,KAAKM,SAASD,MAAME,MAChCC,KAAMT,EAAKC,KAAKM,SAASE,KAAKD,MAC9BE,OAAQV,EAAKC,KAAKM,SAASG,OAAOF,QAwBtC,SAASG,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAiBtC,OAfgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACJN,EACLI,EAAQ,C,SACNN,E,UACAC,IAGFM,EAAO,C,SACLP,E,UACAC,GACF,GACAA,EAAU,G,CAMhBb,EAAKC,KAAKoB,iBAAiB,QAAShB,GACpCL,EAAKC,KAAKoB,iBAAiB,UA1CTC,IAChBA,EAAMC,iBAEN,MAAMjB,MAAEA,EAAKG,KAAEA,EAAIC,OAAEA,GAAWL,IAChC,IAAImB,EAAYC,OAAOnB,GAEvB,IAAK,IAAIoB,EAAI,EAAGA,GAAKhB,EAAQgB,GAAK,EAChCd,SAAWc,EACXf,EAAcC,SAAUY,GACrBG,MAAK,EAACf,SAAEA,EAAQC,UAAEA,MACjBe,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAc,IAE7EkB,OAAM,EAACnB,SAAEA,EAAQC,UAAEA,MAClBe,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAc,IAG7EW,GAAaC,OAAOhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n}\n\nconst createObjectDataInput = () => {\n\n  const objDataInput = {\n    delay: refs.form.elements.delay.value,\n    step: refs.form.elements.step.value,\n    amount: refs.form.elements.amount.value,\n  }\n  return objDataInput;\n}\n\nconst promises = (event) => {\n  event.preventDefault()\n\n  const { delay, step, amount } = createObjectDataInput() \n  let delayTime = Number(delay);\n\n  for (let i = 1; i <= amount; i += 1) {\n    position = i;\n    createPromise(position, delayTime)\n      .then(({ position, delayTime }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayTime}ms`);\n      })\n      .catch(({ position, delayTime }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayTime}ms`);\n      });\n    \n    delayTime += Number(step)\n  }}\n\nfunction createPromise(position, delayTime) {\n\n  const shouldResolve = Math.random() > 0.3;\n  \n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n       if (shouldResolve) {\n      resolve({\n        position,\n        delayTime,\n      }) \n  } else {\n      reject({\n        position,\n        delayTime,\n    })\n  }}, delayTime)\n   \n  })\n  return promise;\n}\n\nrefs.form.addEventListener('input', createObjectDataInput)\nrefs.form.addEventListener('submit', promises)"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","button","$47d4ff9957288465$var$createObjectDataInput","delay","elements","value","step","amount","$47d4ff9957288465$var$createPromise","position","delayTime","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayTime1","Number","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.06e0ce06.js.map"}