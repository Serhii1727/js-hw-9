{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,WAG3BE,EAAwB,KAEP,CACnBC,MAAON,EAAKC,KAAKM,SAASD,MAAME,MAChCC,KAAMT,EAAKC,KAAKM,SAASE,KAAKD,MAC9BE,OAAQV,EAAKC,KAAKM,SAASG,OAAOF,QA6CtCR,EAAKC,KAAKU,iBAAiB,QAASN,GACpCL,EAAKC,KAAKU,iBAAiB,UAzCTC,IAChBA,EAAMC,iBAEN,IAAIC,EAAa,KACbC,EAAW,EAEf,MAAMT,MAAEA,EAAKG,KAAEA,EAAIC,OAAEA,GAAWL,IAEhC,IAAIW,EAAyBC,OAAOX,GAChCY,EAAsBZ,EAK5BQ,EAAaK,aAAY,KAerB,GAdAJ,GAAY,EA4BhB,SAAuBK,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAetC,OAbgB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQ,C,SACNN,E,uBACAC,IAGFM,EAAO,C,SACLP,E,uBACAC,GACF,G,CAxCFO,CAAcb,EAAUC,GACrBa,MAAK,EAACT,SAAEA,EAAQC,uBAAEA,MACjBS,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAA2B,IAE1FY,OAAM,EAACb,SAAEA,EAAQC,uBAAEA,MAClBS,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBd,QAAeC,MAA2B,IAIxFL,GAA0BC,OAAOR,GACjCS,EAAsBD,OAAOR,GAE3BM,IAAaE,OAAOP,GAGtB,OAFAyB,cAAcrB,QACdC,EAAW,E,GAKZG,EAAoB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button'),\n}\n\nconst createObjectDataInput = () => {\n\n  const objDataInput = {\n    delay: refs.form.elements.delay.value,\n    step: refs.form.elements.step.value,\n    amount: refs.form.elements.amount.value,\n  }\n  return objDataInput;\n}\n\nconst promises = (event) => {\n  event.preventDefault()\n\n  let intervalId = null;\n  let position = 0;\n\n  const { delay, step, amount } = createObjectDataInput() \n\n  let currentTimeDonePromise = Number(delay);\n  let currentStepInterval = delay;\n\n  \n  \n  \nintervalId = setInterval(() => {\n    position += 1;\n\n    createPromise(position, currentTimeDonePromise)\n      .then(({ position, currentTimeDonePromise }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${currentTimeDonePromise}ms`);\n      })\n      .catch(({ position, currentTimeDonePromise }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${currentTimeDonePromise}ms`);\n      });\n    \n    \n      currentTimeDonePromise += Number(step);\n      currentStepInterval = Number(step);\n\n    if (position === Number(amount)) {\n      clearInterval(intervalId)\n      position = 0;\n      return;\n    } \n\n    \n  }, currentStepInterval);\n  \n}\n\nrefs.form.addEventListener('input', createObjectDataInput)\nrefs.form.addEventListener('submit', promises)\n\nfunction createPromise(position, currentTimeDonePromise) {\n\n  const shouldResolve = Math.random() > 0.3;\n  \n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({\n        position,\n        currentTimeDonePromise,\n      }) \n  } else {\n      reject({\n        position,\n        currentTimeDonePromise,\n    })\n  }\n  })\n  return promise;\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","button","$47d4ff9957288465$var$createObjectDataInput","delay","elements","value","step","amount","addEventListener","event","preventDefault","intervalId","position1","currentTimeDonePromise1","Number","currentStepInterval","setInterval","position","currentTimeDonePromise","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure","clearInterval"],"version":3,"file":"03-promises.c13b5d7b.js.map"}